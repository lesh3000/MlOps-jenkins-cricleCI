version: 2.1
parameters:
  accountid:
    type: string
    default: "524768791364"
  region:
    type: string
    default: "us-west-1"
jobs:
  lint:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/proj5
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make -i lint

  buildtrain:
    docker:
      - image: cimg/python:3.8.7
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run: | 
          make buildtrain

  train:
    docker:
      - image: cimg/python:3.8.7
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: "train and save model"
          command: |
            export key_id=$key_id
            echo $key_id
            export secret_key=$secret_key
            echo $secret_key
            docker pull dmitrylesh/train
            docker run -e secret_key -e key_id --rm -it dmitrylesh/train
  buildpres:
    docker:
      - image: cimg/python:3.8.7
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run: | 
          make buildpreds   

  test:
    docker:
      - image: cimg/python:3.8.7
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: "train and save model"
          command: |
            export key_id=$key_id
            echo $key_id
            export secret_key=$secret_key
            echo $secret_key
            docker pull dmitrylesh/preds
            docker run -p 80:8000 -e secret_key -e key_id dmitrylesh/preds
  testflask:
    docker:
      - image: cimg/python:3.8.7
    steps:
      - checkout
      - run:
          name: "test flask"
          command: |
            sleep 60
            PORT=8000
            echo "Port: $PORT"

            # POST method predict
            curl -d '{
               "CHAS":{
                  "0":0
               },
               "RM":{
                  "0":6.575
               },
               "TAX":{
                  "0":296.0
               },
               "PTRATIO":{
                  "0":15.3
               },
               "B":{
                  "0":396.9
               },
               "LSTAT":{
                  "0":4.98
               }
            }'\
                 -H "Content-Type: application/json" \
                 -X POST http://localhost:$PORT/predict

workflows:
  train_deploy:
    jobs:
#      - lint
#      - buildtrain:
#          requires:
#            - lint
#      - train:
#          requires:
#            - buildtrain
 #     - buildpres #:
 #         requires:
#            - train
      - test #:
 #         requires:
 #           - buildpres
      - testflask #:
#          requires:
#            - test
