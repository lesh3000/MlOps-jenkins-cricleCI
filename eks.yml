  AWSTemplateFormatVersion: '2010-09-09'

  Parameters:
    EKSClusterName:
      Type: String
      Default: EKS
      Description: The desired name of your AWS EKS Cluster.

    EKSVersion:
      Type: String
      Default: 1.21
      Description: The desired version of your AWS EKS Cluster.

    EKSNodeGroupName:
      Type: String
      Default: NodeGroup01
      Description: The desired name of your AWS EKS Node Group.

    EKSDesiredWorkerNode:
      Type: Number
      Default: 2
      Description: Number of desired Worker Node.
      MinValue: 1
      MaxValue: 7

    EKSWorkerNodeInstanceType:
      Type: String
      Default: t3.small


    EKSIAMRoleName:
      Type: String
      Default: EKSClusterRolecluster
      Description: The name of the IAM role for the EKS service to assume.

    EKSKeyPair:
      Type: "AWS::EC2::KeyPair::KeyName"
      Default: "eks"
      Description: The name of Key Pair to etasblish connection with Worker Node.



    VpcBlock:
      Type: String
      Default: 10.0.0.0/16
      Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.
      AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
      ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

    PublicSubnet01Block:
      Type: String
      Default: 10.0.0.0/24
      Description: CidrBlock for public subnet 01 within the VPC.
      AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
      ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

    PublicSubnet02Block:
      Type: String
      Default: 10.0.1.0/24
      Description: CidrBlock for public subnet 02 within the VPC.
      AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
      ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

    AvailabilityZonePublicSubnet01:
      Type: CommaDelimitedList<AWS::EC2::AvailabilityZone::Name>
      Default: us-west-1a
      Description: Availability Zone for the Public Subnet 01.

    AvailabilityZonePublicSubnet02:
      Type: CommaDelimitedList<AWS::EC2::AvailabilityZone::Name>
      Default: us-west-1b
      Description: Availability Zone for the Public Subnet 02.

  Metadata:
    AWS::CloudFormation::Interface:
      ParameterGroups:
      -
        Label:
          default: "Worker Network Configuration"
        Parameters:
          - VpcBlock
          - PublicSubnet01Block
          - AvailabilityZonePublicSubnet01
          - PublicSubnet02Block
          - AvailabilityZonePublicSubnet02

      -
        Label:
          default: "EKS Cluster Information"
        Parameters:
          - EKSClusterName
          - EKSVersion
          - EKSNodeGroupName
          - EKSDesiredWorkerNode
          - EKSWorkerNodeInstanceType
          - EKSIAMRoleName
          - EKSKeyPair

  Mappings:
    ServicePrincipals:
      aws-cn:
        ec2: ec2.amazonaws.com.cn
      aws-us-gov:
        ec2: ec2.amazonaws.com
      aws:
        ec2: ec2.amazonaws.com

  Resources:

    eksVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcBlock
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags:
          - Key: Name
            Value: !Sub '${AWS::StackName}-VPC'
          - Key: Project
            Value: aws-eks

    eksInternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: !Sub '${AWS::StackName}-InternetGateway'
          - Key: Project
            Value: aws-eks

    eksVPCGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId: !Ref eksInternetGateway
        VpcId: !Ref eksVPC

    eksPublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref eksVPC
        Tags:
          - Key: Name
            Value: !Sub '${AWS::StackName}-RouteTable'
          - Key: Project
            Value: aws-eks

    eksPublicRoute:
      DependsOn: eksVPCGatewayAttachment
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref eksPublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref eksInternetGateway

    eksPublicSubnet01:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Ref AvailabilityZonePublicSubnet01
        MapPublicIpOnLaunch: true
        CidrBlock:
          Ref: PublicSubnet01Block
        VpcId:
          Ref: eksVPC
        Tags:
          - Key: Name
            Value: !Sub "${AWS::StackName}-PublicSubnet01"
          - Key: Project
            Value: aws-eks

    eksPublicSubnet02:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Ref AvailabilityZonePublicSubnet02
        MapPublicIpOnLaunch: true
        CidrBlock:
          Ref: PublicSubnet02Block
        VpcId:
          Ref: eksVPC
        Tags:
          - Key: Name
            Value: !Sub "${AWS::StackName}-PublicSubnet02"
          - Key: Project
            Value: aws-eks

    eksPublicSubnet01RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref eksPublicSubnet01
        RouteTableId: !Ref eksPublicRouteTable

    eksPublicSubnet02RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref eksPublicSubnet02
        RouteTableId: !Ref eksPublicRouteTable

    eksSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Cluster communication with worker nodes
        VpcId: !Ref eksVPC
        Tags:
          - Key: Name
            Value: !Sub "${AWS::StackName}-SecurityGroup"
          - Key: Project
            Value: aws-eks

    eksIAMRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                - eks.amazonaws.com
              Action:
              - 'sts:AssumeRole'
        RoleName: !Ref EKSIAMRoleName
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

    eksCluster:
      Type: AWS::EKS::Cluster
      Properties:
        Name: !Ref EKSClusterName
        Version: !Ref EKSVersion
        RoleArn:
          "Fn::GetAtt": ["eksIAMRole", "Arn"]
        ResourcesVpcConfig:
          SecurityGroupIds:
            - !Ref eksSecurityGroup
          SubnetIds:
            - !Ref eksPublicSubnet01
            - !Ref eksPublicSubnet02
      DependsOn: [eksIAMRole, eksPublicSubnet01, eksPublicSubnet02, eksSecurityGroup]

    eksNodeInstanceRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - !FindInMap [ServicePrincipals, !Ref "AWS::Partition", ec2]
              Action:
                - "sts:AssumeRole"
        ManagedPolicyArns:
          - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
          - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
          - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        Path: /

    eksNodeGroup:
      Type: AWS::EKS::Nodegroup
      Properties:
        ClusterName: !Ref EKSClusterName
        NodeRole:
          "Fn::GetAtt": ["eksNodeInstanceRole", "Arn"]
        AmiType: AL2_x86_64
        InstanceTypes:
          - !Ref EKSWorkerNodeInstanceType
        NodegroupName: !Ref EKSNodeGroupName
        RemoteAccess:
          Ec2SshKey: !Ref EKSKeyPair
        ScalingConfig:
          MinSize: 1
          DesiredSize: !Ref EKSDesiredWorkerNode
          MaxSize: 3
        Labels:
          Project: aws-eks
        Subnets:
          - !Ref eksPublicSubnet01
          - !Ref eksPublicSubnet02
      DependsOn: [eksCluster, eksNodeInstanceRole]

  Outputs:
    SubnetIds:
      Description: Subnets IDs in the eksVPC
      Value: !Join [ ",", [ !Ref eksPublicSubnet01, !Ref eksPublicSubnet02 ] ]
    SecurityGroups:
      Description: Security group for the cluster control plane communication with worker nodes
      Value: !Join [ ",", [ !Ref eksSecurityGroup ] ]
    VpcId:
      Description: The eksVPC Id
      Value: !Ref eksVPC